(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{463:function(t,r,s){"use strict";s.r(r);var a=s(11),l=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"call-和-ret"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#call-和-ret"}},[t._v("#")]),t._v(" Call 和 ret")]),t._v(" "),r("p",[t._v("call 指令会将ri中下一条指令地址放入栈顶然后跳转到被掉函数中执行，")]),t._v(" "),r("p",[t._v("ret 会将栈中存放的rip返还给rip寄存器。")]),t._v(" "),r("p",[r("strong",[t._v("总结：")])]),t._v(" "),r("p",[r("strong",[t._v("1主函数在调用被调函数时会将返回地址偷偷投放如堆栈中，")])]),t._v(" "),r("p",[r("strong",[t._v("2.被调函数返回时会取出堆栈中返回地址，引导cpu继续执行main函数.")])])])}),[],!1,null,null,null);r.default=l.exports}}]);